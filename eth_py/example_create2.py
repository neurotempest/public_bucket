from web3 import Web3
from eth_utils import to_checksum_address

# example_create2.py
#
# This script implments the create2 method for determining the address of a
# smart contract before it is deployed.

#owner_addr = '0x0B90209eC231Bc70aE42d6a2C255a6e5813662b1'
owner_addr = '0x0b90209ec231bc70ae42d6a2c255a6e5813662b1'
salt = '0xfb0f4f618bda4e660af9ad58ef68827f1285f6fe70e9fb6349d6ed8cbf542daf'
pre = '0xff'
init_code = '0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104a5806100606000396000f3fe6080604052600436106100225760003560e01c80633ef133671461009557610090565b366100905760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f1935050505015801561008d573d6000803e3d6000fd5b50005b600080fd5b6100af60048036038101906100aa91906102b9565b6100b1565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461010957600080fd5b6000819050600030905060008273ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b815260040161014e91906102f5565b602060405180830381865afa15801561016b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018f9190610346565b905060008114156101a257505050610253565b60008373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016101ff9291906103e1565b6020604051808303816000875af115801561021e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102429190610442565b90508061024e57600080fd5b505050505b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102868261025b565b9050919050565b6102968161027b565b81146102a157600080fd5b50565b6000813590506102b38161028d565b92915050565b6000602082840312156102cf576102ce610256565b5b60006102dd848285016102a4565b91505092915050565b6102ef8161027b565b82525050565b600060208201905061030a60008301846102e6565b92915050565b6000819050919050565b61032381610310565b811461032e57600080fd5b50565b6000815190506103408161031a565b92915050565b60006020828403121561035c5761035b610256565b5b600061036a84828501610331565b91505092915050565b6000819050919050565b600061039861039361038e8461025b565b610373565b61025b565b9050919050565b60006103aa8261037d565b9050919050565b60006103bc8261039f565b9050919050565b6103cc816103b1565b82525050565b6103db81610310565b82525050565b60006040820190506103f660008301856103c3565b61040360208301846103d2565b9392505050565b60008115159050919050565b61041f8161040a565b811461042a57600080fd5b50565b60008151905061043c81610416565b92915050565b60006020828403121561045857610457610256565b5b60006104668482850161042d565b9150509291505056fea264697066735822122022ce3d9d4945c3df323321d0b797aab10f6e51ae57323f20bd34b3d2be87abed64736f6c634300080a0033'

b_pre = bytes.fromhex(pre[2:])
b_address = bytes.fromhex(owner_addr[2:])
b_salt = bytes.fromhex(salt[2:])
b_init_code = bytes.fromhex(init_code[2:])

keccak_b_init_code = Web3.keccak(b_init_code)
b_result = Web3.keccak(b_pre + b_address + b_salt + keccak_b_init_code)
result_address = to_checksum_address(b_result[12:].hex())

print('Contract address:', result_address)

